"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7761],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=m(n),k=l,c=u["".concat(p,".").concat(k)]||u[k]||d[k]||i;return n?a.createElement(c,r(r({ref:t},s),{},{components:n})):a.createElement(c,r({ref:t},s))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var m=2;m<i;m++)r[m]=n[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9996:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=n(7462),l=(n(7294),n(3905));const i={sidebar_position:7},r="Template Creation Process",o={unversionedId:"spotify-link/custom-template",id:"spotify-link/custom-template",title:"Template Creation Process",description:"To generate a personalized template, follow these steps:",source:"@site/docs/spotify-link/custom-template.md",sourceDirName:"spotify-link",slug:"/spotify-link/custom-template",permalink:"/obsidian-plugins-docs/docs/spotify-link/custom-template",draft:!1,editUrl:"https://github.com/studiowebux/obsidian-plugins-docs/docs/spotify-link/custom-template.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"documentationSidebar",previous:{title:"Configuration",permalink:"/obsidian-plugins-docs/docs/spotify-link/configuration"}},p={},m=[],s={toc:m},u="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"template-creation-process"},"Template Creation Process"),(0,l.kt)("p",null,"To generate a personalized template, follow these steps:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Access the ",(0,l.kt)("strong",{parentName:"li"},"Settings")," tab."),(0,l.kt)("li",{parentName:"ol"},"Navigate to the ",(0,l.kt)("strong",{parentName:"li"},"Templates")," section."),(0,l.kt)("li",{parentName:"ol"},"Specify the desired output utilizing the provided variables."),(0,l.kt)("li",{parentName:"ol"},"Execute the Obsidian Command ",(0,l.kt)("inlineCode",{parentName:"li"},"append-currently-playing-track-using-template")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"append-currently-playing-episode-using-template")," (Hotkeys configuration is also an option)."),(0,l.kt)("li",{parentName:"ol"},"Your note will display the customized template, populating information sourced from Spotify.")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("strong",{parentName:"p"},"Note"),": This plugin is built around the ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"currently playing track"))," and may not retrieve all available data. If there are missing elements, you can request them through a Github Issue.\nStarting v1.2.0 it supports both ",(0,l.kt)("strong",{parentName:"p"},"track")," and ",(0,l.kt)("strong",{parentName:"p"},"episode"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Available Variables for Songs")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ song_name }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ song_link }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_release }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_cover_large }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_cover_medium }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_cover_small }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_cover_link_large }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_cover_link_medium }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_cover_link_small }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ album_link }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ artists }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ timestamp }}")," => This one prints the current datetime")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Available Variables for Podcasts")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_name }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_link }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ description }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ duration_ms }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ audio_preview_url }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_cover_large }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_cover_medium }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_cover_small }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_cover_link_large }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_cover_link_medium }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ episode_cover_link_small }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ release_date }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ show_name }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ publisher }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ show_description }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ show_link }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{{ total_episodes }}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'{{ timestamp }}"')," => This one prints the current datetime")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Notes")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"This template automatically inserts a double line break (",(0,l.kt)("inlineCode",{parentName:"li"},"\\n\\n"),") at the end of your template."),(0,l.kt)("li",{parentName:"ul"},"Utilize Markdown to define your template."),(0,l.kt)("li",{parentName:"ul"},"The plugin does not filter or sanitize your inputs.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Text:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"'{{ song_name }}' by {{ artists }} from {{ album }} released in {{ album_release }}\\n{{ timestamp }}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-markdown"},"**Song Name:** {{ song_name }}\n**Song URL:** {{ song_link }}\n**Album Name:** {{ album }}\n**Album Release Date:** {{ album_release }}\n**Album URL:** {{ album_link }}\n**Cover:** {{ album_cover_medium }}\n**Cover URL:** {{ album_cover_link_medium }}\n**Artists:** {{ artists }}\n**Added at:** _{{ timestamp }}_\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Table:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-md"},"| {{ song_name }} | {{ artists }} | {{ album }} | {{ album_release }} | {{ timestamp }} |\n")),(0,l.kt)("p",null,"Outside the template you can define a ",(0,l.kt)("em",{parentName:"p"},"header")," to generate a Markdown Table, like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-md"},"| Song | Artists | \xa0Album | Album Release Date | Added at |\n| ---- | ------- | ------ | ------------------ | -------- |\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"CSV:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"{{ song_name }};{{ artists }};{{ album }};{{ album_release }};{{ timestamp }};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-md"},"**Episode Name:** {{ episode_name }}\n**Description:** {{ description }}\n**Added at:** _{{ timestamp }}_\n")))}d.isMDXComponent=!0}}]);